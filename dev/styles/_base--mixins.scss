// ==|== mixins ================================================================
// =============================================================================

// Common
// -----------------------------------------------------------------------------
// Mixins
// -----------------------------------------------------------------------------
@mixin mediaMinWidth($min-width) {
  @media screen and (min-width: $min-width) {
    @content;
  }
}
@mixin toggleVisibility($state) {
  @if ($state == "off") or ($state == "none") or ($state == "hide") or ($state == "hidden") {
    opacity: 0;
    visibility: hidden;
  } @else {
    opacity: 1;
    visibility: visible;
  }
}
@mixin container($max-width: none) {
  @if $max-width == "" or $max-width == none or $max-width == "none" or $max-width == "reset" {
    margin-left: 0;
    margin-right: 0;
    max-width: none;
  } @else if $max-width == "reset-margin" or $max-width == "reset-margins" {
    margin-left: 0;
    margin-right: 0;
    max-width: 100%;
  } @else {
    margin-left: auto;
    margin-right: auto;
    max-width: numToRem($max-width);
  }
}
@mixin posCover($pos: static, $index: 1) {
  z-index: $index;
  @if $pos == "reset" {
    position: static;
    top: auto;
    right: auto;
    bottom: auto;
    left: auto;
    margin: 0;
  } @else {
    position: $pos;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    margin: auto;
  }
}
@mixin bgCover($bgImg: none, $bgColor: transparent) {
  @if $bgImg != none or $bgImg != "" {
    background-image: url($bgImg);
  }
  background-color: $bgColor;
  background-repeat: no-repeat;
  background-position: center center;
  background-attachment: fixed;
  background-size: cover;
}
@mixin flexSpacing {
  @extend %flex-fix;
  @extend %flex-margin;
  display: flex;
  flex: 1 1 100%;
  flex-wrap: wrap;
  justify-content: center;
}
@mixin flexCenter($fullHeight: false) {
	display: flex;
	align-items: center;
	justify-content: center;
	flex-direction: column;
	text-align: center;
  @if $fullHeight {
    height: 100vh;
  }
}
@mixin htmlScrollLock {
  &,
  body {
    height: 100%;
  }
  &[data-scrollable="locked"],
  &[data-scrollable="locked"] body {
    overflow: hidden;
    max-height: 100vh;
  }
}
@mixin linkUnderline($bottom: 0, $height: 0.1rem) {
  position: relative;
  &::before {
    content: ' ';
    display: block;
    position: absolute;
    bottom: $bottom;
    left: 0;
    right: 0;
    margin-left: auto;
    margin-right: auto;
    height: $height;
    background-color: currentColor;
    opacity: 0;
    transition: opacity $easeDuration ease-in-out; //  background-color $easeDuration ease-in-out,
  }
  /*
  &:hover {
    &::before {
      opacity: 1;
    }
  }
  */
}
